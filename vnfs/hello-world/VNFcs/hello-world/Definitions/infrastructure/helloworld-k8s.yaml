tosca_definitions_version: tosca_simple_yaml_1_0

description: Basic example to deploy a single VM

# Custom type required to set "image" and "key_name" properties on Openstack Server.
# This is a recommended workaround by Openstack (https://docs.openstack.org/heat-translator/latest/usage.html)
node_types:
  accanto.nodes.K8sCompute:
    derived_from: tosca.nodes.Compute
    properties:
      image:
        type: string
      container_port:
        type: integer

  accanto.nodes.K8sStorage:
    derived_from: tosca.nodes.BlockStorage
    properties:
      size:
        type: integer
      class:
        type: string

topology_template:
  inputs:
    name:
      type: string
    image:
      type: string
      default: nginx:alpine
    container_port:
      type: integer
      default: 80
    storage_size:
      type: integer
      # in GB
      default: 1
    storage_class:
      type: string
      default: microk8s-hostpath

  node_templates:
    hello_world_server:
      type: accanto.nodes.K8sCompute
      capabilities:
        host:
          #Heat translator will try and find an Openstack "flavour" which matches the given properties
          properties:
            num_cpus: 2
            disk_size: 10 GB
            mem_size: 2 GB
      properties:
        image: { get_input: image }
        container_port: { get_input: container_port }
      requirements:
        # contextually this can only be a relationship type
        - local_storage:
            # capability is provided by Compute Node Type
            capability: tosca.capabilities.Attachment
            node: hello_world_storage
            relationship:
              type: tosca.relationships.AttachesTo
              properties:
                location: /data

    hello_world_storage:
      type: accanto.nodes.K8sStorage
      properties:
        size: { get_input: storage_size }
        class: { get_input: storage_class }

  outputs:
    hello_world_private_ip:
      description: The private IP address of the hello_world_server
      value: { get_attribute: [hello_world_server, private_address] }
