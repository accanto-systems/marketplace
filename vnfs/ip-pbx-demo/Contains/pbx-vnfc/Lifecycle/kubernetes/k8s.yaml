apiVersion: v1
kind: Service
metadata:
  name: pbx
  labels:
    app: pbx
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
    name: http
  selector:
    app: pbx
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: pbx
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: pbx
        part-of: lm
    annotations:
      {{- if networks }}
      "k8s.v1.cni.cncf.io/networks": {{ networks }}
      {{- end }}
    spec:
      containers:
        - name: pbx
          image: {{ docker_image }}
          imagePullPolicy: IfNotPresent
          ports:
          - containerPort: 80
            protocol: TCP
          envFrom:
          - configMapRef:
              name: pbx
          env:
          - name: INSTANCE_ID
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: SERVER_ID
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          volumeMounts:
          {{- if .Values.global.security.lmCerts.secretName }}
          - name: {{ .Values.global.security.lmCerts.secretName }}
            mountPath: /var/lm/certs
          {{- end }}
          {{- if .Values.global.security.lmKeystore.secretName }}
          - name: {{ .Values.global.security.lmKeystore.secretName }}
            mountPath: /var/lm/keystore
          {{- end }}
          {{- if .Values.global.vault.vaultCert.secretName }}
          - name: {{ .Values.global.vault.vaultCert.secretName }}
            mountPath: /var/lm/vault/certs
          {{- end }}
      volumes:
        {{- if .Values.global.security.lmCerts.secretName }}
      - name: {{ .Values.global.security.lmCerts.secretName }}
        secret:
          secretName: {{ .Values.global.security.lmCerts.secretName }}
        {{- end }}
